
from GPT_stories import getStoryByRole
import discord
from discord.ext import commands
from discord import app_commands
from utils.gpt import generate_gpt_response
from utils.message_utils import send_message_in_chunks
from utils.users import UNBUTTERED_BAGEL_ID

async def define_ask_bread_command(tree, servers):
    @tree.command(name="askbread", description="Responds with a custom message generated by OpenAI, incorporating humor related to banana bread.", guilds=servers)
    async def askbread(interaction: discord.Interaction, user_input: str, role: str):
        await interaction.response.defer()

        story = getStoryByRole(role, interaction.user.id)
        # if interaction.user.id == UNBUTTERED_BAGEL_ID:
        #     model = "gpt-4-turbo"  # Way to expensive
        # else:
        model = "gpt-3.5-turbo"
        # Generate the completion response using the selected story
        response_message = await generate_gpt_response(model, story, user_input)
        await send_message_in_chunks(response_message, interaction)